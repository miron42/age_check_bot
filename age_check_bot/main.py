import asyncio
import os
from datetime import datetime
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ChatJoinRequestHandler,
    filters,
)
from config import BOT_TOKEN, MEDIA_FOLDER
from db import (
    init_db,
    add_admin,
    get_scheduled_broadcasts,
    remove_scheduled_broadcast
)
from bot_handlers import (
    start,
    confirm_age,
    handle_text_buttons,
    handle_photo_with_caption
)
from admin_handlers import (
    admin_panel,
    admin_inline_handler
)
from chat_join_handler import handle_join_request
from utils import send_ad_to_user


async def process_scheduled_broadcasts(app: Application):

    while True:
        now = datetime.utcnow()
        scheduled = await get_scheduled_broadcasts()
        print(f"[Scheduler] –ù–∞–π–¥–µ–Ω–æ {len(scheduled)} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫")

        for b_id, text, image_path, send_at in scheduled:
            try:
                send_at_dt = datetime.fromisoformat(send_at)
            except Exception as e:
                print(f"[Scheduler] ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–∏: {e}")
                continue

            if send_at_dt <= now:
                get_confirmed_users = app.bot_data.get("get_confirmed_users")
                if not get_confirmed_users:
                    print("‚ùó get_confirmed_users –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ bot_data")
                    continue

                users = await get_confirmed_users()
                print(
                    f"[Broadcast #{b_id}] –û—Ç–ø—Ä–∞–≤–∫–∞ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")

                for uid in users:
                    try:
                        await send_ad_to_user(app, uid, text, image_path)
                        print(f"[Broadcast #{b_id}] ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {uid}")
                        await asyncio.sleep(0.05)
                    except Exception as e:
                        print(f"[Broadcast #{b_id}] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–ª—è {uid}: {e}")

                await remove_scheduled_broadcast(b_id)
                print(f"[Broadcast #{b_id}] üßπ –£–¥–∞–ª–µ–Ω–æ –∏–∑ –±–∞–∑—ã")

        await asyncio.sleep(10)


async def main():
    if not os.path.exists(MEDIA_FOLDER):
        os.makedirs(MEDIA_FOLDER)

    await init_db()
    await add_admin(5734739119)  # ‚õ≥ –£–∫–∞–∂–∏ —Å–≤–æ–π ID –∞–¥–º–∏–Ω–∞

    app = Application.builder().token(BOT_TOKEN).build()

    # üëá –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    app.bot_data["get_confirmed_users"] = __import__("db").get_confirmed_users

    # –ö–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))

    # –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    app.add_handler(CommandHandler("admin", admin_panel))
    app.add_handler(CallbackQueryHandler(admin_inline_handler))

    # –°–æ–æ–±—â–µ–Ω–∏—è
    app.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND, handle_text_buttons))
    app.add_handler(MessageHandler(
        filters.PHOTO & filters.CAPTION, handle_photo_with_caption))

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
    app.add_handler(MessageHandler(
        filters.TEXT & filters.Regex("–ú–Ω–µ –µ—Å—Ç—å 18"), confirm_age))

    # Join Request
    app.add_handler(ChatJoinRequestHandler(handle_join_request))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")

    async with app:
        # –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫
        asyncio.create_task(process_scheduled_broadcasts(app))

        await app.start()
        await app.updater.start_polling()
        try:
            while True:
                await asyncio.sleep(1)
        except asyncio.CancelledError:
            print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        finally:
            await app.updater.stop()
            await app.stop()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("‚õî –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
